name: Release to Master branch

on:
  push:
    branches:
      - master # Trigger workflow on commits to the master branch

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:

    # Pre-check! Don't continue if there is no private key setup in the repo
    - name: Debug Secret Output
      run: |
        if [ -z "${{ secrets.GPG_PRIVATE_KEY }}" ]; then
          echo "GPG_PRIVATE_KEY is missing! Configure your GPG Key as a repository secret."
          exit 1
        else
          echo "GPG_PRIVATE_KEY is present."
        fi

    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensures full history and all tags are fetched

    # Step 2: Install Composer Dependencies (non-dev)
    - name: Install Composer dependencies
      run: |
        composer install --no-dev --prefer-dist --optimize-autoloader

    # Step 3: Install NPM Dependencies (non-dev)
    - name: Install NPM dependencies
      run: |
        npm ci --production

    # Step 4: Get the latest tag
    - name: Fetch all tags
      run: git fetch --tags --force

    # Get the latest tag that matches a version pattern
    - name: Get Latest Git Tag
      id: get_version
      run: |
        TAG=$(git describe --tags --abbrev=0)
        echo "version=${TAG}" >> $GITHUB_ENV

    # Step 5: Update the VERSION file
    - name: Update VERSION file
      run: |
        echo "${{ env.version }}\n" > VERSION
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add VERSION
        git commit -m "Saving VERSION to ${{ env.version }}"
        git push origin HEAD

    # Step 6: Verify VERSION file content (Optional)
    - name: Display VERSION file
      run: cat VERSION

    # Step 7: Create a ZIP archive of the repository
    - name: Create Release Package
      run: |
        zip -r release.zip .

    # Generate a SHA256 checksum for the ZIP archive
    - name: Generate Checksum
      run: |
        sha256sum release.zip > release.zip.sha256

    # Import the GPG private key
    - name: Sign Checksum
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode > private.key
        gpg --batch --yes --passphrase "${{ secrets.GPG_PASSPHRASE }}" --import private.key
        rm private.key
        gpg --armor --sign --output release.zip.sha256.asc --detach-sign release.zip.sha256

    # Publish Git Release
    - name: Publish Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.version }}
        release_name: "${{ env.version }} Release"
        body: "Release package for v${{ env.version }}."
        draft: false
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}

    # Attach release ZIP archive
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_id: ${{ steps.create-release.outputs.id }}
        asset_path: release.zip
        asset_name: release.zip
        asset_content_type: application/zip

    # Attach Checksum file to the release
    - name: Upload Checksum File
      uses: actions/upload-release-asset@v1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_id: ${{ steps.create-release.outputs.id }}
        asset_path: release.zip.sha256
        asset_name: release.zip.sha256
        asset_content_type: text/plain

    # Attach signature file to the release
    - name: Upload Signature File
      uses: actions/upload-release-asset@v1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_id: ${{ steps.create-release.outputs.id }}
        asset_path: release.zip.sha256.asc
        asset_name: release.zip.sha256.asc
        asset_content_type: text/plain

    # Upload public key from the /docs directory
    - name: Upload Public Key
      uses: actions/upload-release-asset@v1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_id: ${{ steps.create_release.outputs.id }}
        asset_path: docs/public-key.asc
        asset_name: public-key.asc
        asset_content_type: text/plain
